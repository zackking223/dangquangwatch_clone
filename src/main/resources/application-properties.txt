# SET to false when in development
spring.thymeleaf.cache=false
spring.web.resources.chain.cache=false

# GOOGLE LOGIN / AUTHENTICATION (will add new account to db if email not exists)
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# GITHUB LOGIN / AUTHENTICATION (will add new account to db if email not exists)
spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# logging.level.org.springframework.security=DEBUG

spring.application.name=shopquanaovqd
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Disable Hibernate usage of JDBC metadata
# Use spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false for Hibernate 6.4 and ealier
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# Database initialization should typically be performed outside of Spring lifecycle
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=never

# WHEN USING DOCKER "localhost" -> "mysql"
# spring.datasource.url=jdbc:mysql://mysql:3306/dongho_dangquang 
spring.datasource.url=jdbc:mysql://localhost:3306/dongho_dangquang
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=8080

spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=test
spring.mail.password=test
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.trust=*
spring.mail.properties.mail.connectiontimeout=5000
spring.mail.properties.mail.timeout=3000
spring.mail.properties.mail.writetimeout=5000

# Cloudinary config
cloudinary.cloud_name=
cloudinary.api_key=
cloudinary.api_secret=

# Twilio Account, for sms sending
twilio.account_sid=YOUR_ACCOUNT_SID
twilio.auth_token=YOUR_AUTH_TOKEN
twilio.phone_number=YOUR_TWILIO_PHONE_NUMBER

# VNPay
vnpay.tmn_code="YOUR_TMN_CODE" # Mã tài khoản TMN của bạn
vnpay.hash_secret="YOUR_HASH_SECRET" # Chuỗi bí mật hash
vnpay.vnp_url="https://sandbox.vnpayment.vn/paymentv2/vpcpay.html"
vnpay.return_url="http://localhost:8080/api/vnpay/return"